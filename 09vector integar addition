#include <iostream>
#include <cstring>
#include <vector>
using namespace::std;

// sum = addend + adder
vector< int > addition( vector< int > addend, vector< int > adder );

int main()
{
   char strA[ 251 ], strB[ 251 ];
   int T;
   cin >> T;
   for( int t = 0; t < T; ++t )
   {
      cin >> strA >> strB;

      int addendSize = strlen( strA );
      vector< int > addend( addendSize );
      for( int i = 0; i < addendSize; ++i )
         addend[ i ] = strA[ addendSize - 1 - i ] - '0';

      int adderSize = strlen( strB );
      vector< int > adder( adderSize );
      for( int i = 0; i < adderSize; ++i )
         adder[ i ] = strB[ adderSize - 1 - i ] - '0';

      vector< int > sum = addition( addend, adder );

      for( int i = sum.size() - 1; i >= 0; i-- )
         cout << sum[ i ];
      cout << endl;
   }
}

// sum = addend + adder
vector< int > addition( vector< int > addend, vector< int > adder )
{
    vector<int>number(max(addend.size(), adder.size())+1);
    addend.resize(max(addend.size(), adder.size())+1);
    adder.resize(max(addend.size(), adder.size())+1);
    for(int i=0;i<addend.size()-1;i++){
        number[i]=addend[i]+adder[i];
    }
    for(int i=0;i<addend.size();i++){
        if(number[i]>=10){
            number[i+1]+=number[i]/10;
            number[i]%=10;
        }
    }
    while(number.size()!=1&&number[number.size()-1]==0){
        number.resize(number.size()-1);
    }
    return number;
}

